#
# Profile documentation: https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-profiles
#

logging:
  level:
    com.zaxxer.hikari: DEBUG

spring:
  datasource:
    jdbcUrl: jdbc:postgresql://${soh_db_host}:${soh_db_port}/${soh_db_database}?currentSchema=public
    username: ${soh_db_username}
    password: ${soh_db_password}
    data-source-properties:
      stringtype: unspecified
    pool-name: sales-order-hub
    maximum-pool-size: 150
    # 48 connections for SqsListener (8 queues * (5 messages_per_batch + 1) + 5 spare connections for e.g. manual access
    # (s. https://github.com/awspring/spring-cloud-aws/blob/c63f77ff5fe9fa5d8e23ae11c4cbc19ecd99ab15/spring-cloud-aws-messaging/src/main/java/io/awspring/cloud/messaging/listener/SimpleMessageListenerContainer.java#L203)
    minimum-idle: 25

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    show-sql: true

  management:
    endpoints:
      web:
        exposure:
          include: info, health,configprops

#  Override the path for camunda rest engine if needed.
#  jersey:
#    application-path:

cloud:
  aws:
    region:
      static: eu-central-1
    stack:
      auto: false


#AWS
soh:
  sns:
    topic:
      orderCreatedV2: ${soh_order_created_v2}
      orderCompleted: ${soh_order_completed}
      invoiceAddressChanged: ${soh_invoice_address_changed}
      deliveryAddressChanged: ${soh_delivery_address_changed}
      salesOrderRowCancelled: ${soh_sales_order_row_cancellation}
      salesOrderCancelled: ${soh_sales_order_cancellation}
      orderInvoiceCreatedV1: ${soh_order_invoice_created_v1}
      shipmentConfirmedV1: ${sns_soh_shipment_confirmed_v1}
      returnOrderCreatedV1: ${sns_soh_return_order_created_v1}
      coreInvoiceReceivedV1: ${sns_soh_core_invoice_received_v1}
      creditNoteReceivedV1: ${sns_soh_credit_note_received_v1}
      migrationOrderCreatedV2: ${sns_migration_soh_order_created_v2}
      migrationSalesOrderRowCancelledV1: ${sns_migration_soh_sales_order_row_cancelled_v1}
      migrationSalesOrderCancelledV1: ${sns_migration_soh_sales_order_cancelled_v1}
      migrationReturnOrderCreatedV1: ${sns_migration_soh_return_order_created_v1}
      dropshipmentOrderCreatedV1: ${sns_soh_dropshipment_order_created_v1}
      dropshipmentOrderReturnNotifiedV1: ${sns_soh_dropshipment_order_return_notified_v1}
  sqs:
    queue:
      ecpShopOrders: ${soh_sqs_ecp_shop_orders}
      bcShopOrders: ${soh_sqs_bc_shop_orders}
      coreShopOrders: ${soh_sqs_core_shop_orders}
      orderItemShipped: ${soh_sqs_order_item_shipped}
      orderPaymentSecured: ${soh_sqs_order_payment_secured}
      orderItemTransmittedToLogistic: ${soh_sqs_order_item_transmitted_to_logistic}
      orderItemPackingStarted: ${soh_sqs_order_item_packing_started}
      orderItemTrackingIdReceived: ${soh_sqs_order_item_tracking_id_received}
      orderItemTourStarted: ${soh_sqs_order_item_tour_started}
      invoicesFromCore: ${soh_sqs_invoices_from_core}
      coreCancellation: ${soh_sqs_core_cancellation}
      subsequentDeliveryReceived: ${soh_sqs_subsequent_delivery_received}
      d365OrderPaymentSecured: ${soh_sqs_d365_order_payment_secured}
      dropshipmentShipmentConfirmed: ${soh_sqs_dropshipment_shipment_confirmed}
      dropshipmentPurchaseOrderBooked: ${soh_sqs_dropshipment_purchase_order_booked}
      dropshipmentPurchaseOrderReturnNotified: ${soh_sqs_dropshipment_purchase_order_return_notified}
      dropshipmentPurchaseOrderReturnConfirmed: ${soh_sqs_dropshipment_purchase_order_return_confirmed}
      coreSalesCreditNoteCreated: ${soh_sqs_core_sales_credit_note_created}
      coreSalesInvoiceCreated: ${soh_sqs_core_sales_invoice_created}
      migrationCoreSalesOrderCreated: ${soh_sqs_migration_core_sales_order_created}
      migrationCoreSalesInvoiceCreated: ${soh_sqs_migration_core_sales_invoice_created}
      migrationCoreSalesCreditNoteCreated: ${soh_sqs_migration_core_sales_credit_note_created}
  aws:
    config:
      maxNumberOfMessages: 10
      waitTimeOut: 10
  http:
    connection:
      timeout: ${soh_bpmn_http_connection_timeout_seconds}


#
# Camunda BPM configuration
#   The Camunda settings do not work with profiles. Keep it here (and use dynamic values to overwrite defaults instead)
#
camunda:
  bpm:
    database:
      # IMPORTANT! flyway is responsible for database changes
      schema-update: false
      schema-name: bpm
      table-prefix: ${camunda.bpm.database.schema-name}.
    admin-user:
      id: ${soh_camunda_username:demo}
      password: ${soh_camunda_password:demo}
      firstName: K24Admin
    filter:
      create: All tasks
    history-level: FULL
    history-level-default: FULL

# swagger endpoint documentation
springdoc:
  swagger-ui:
    path: /api/swagger
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs

swagger:
  api:
    title: Sales Order Hub - API Doc
    description: API documentation of Sales Order Hub for direct requests
    version: 1.0
    controller:
      basepackage: de.kfzteile24.salesOrderHub

kfzteile:
  product-data-hub:
    pdhUrl: https://pdh-dashboard-api.${environment:stage}.kfzteile24.io
    authUrl: https://kfzteile24-${environment:stage}.auth.eu-central-1.amazoncognito.com/oauth2/token
    clientId:  ${pdh_client_id:client_id}
    clientSecret: ${pdh_client_secret:client_secret}
  #
  # Delete processes that are not used?
  # KEEP OFF ON PRODUCTION
  #
  deleteUnusedProcesses: true
  process-config:
    subsequent-order-process:
      publish-delay: PT10S
  orderReturnProcess:
    publishDelay: PT10S
  dropShipment:
    splitGenarts:
      - 10033
      - 10034
      - 10035
  persistent-properties:
    -
      key: pauseDropshipmentProcessing
      value: true
      overwrite-on-startup: false
  pricing-service:
    url: ${soh_bpmn_pricing_service_url}
    apiKey:  ${pricing_service_api_key:api_key}

ignoreCoreSalesInvoice: ${ignore_core_sales_invoice}
ignoreCoreCreditNote: ${ignore_core_credit_note}
ignoreMigrationCoreSalesInvoice: ${ignore_migration_core_sales_invoice}
ignoreMigrationCoreSalesCreditNote: ${ignore_migration_core_sales_credit_note}
ignoreMigrationCoreSalesOrder: ${ignore_migration_core_sales_order}
ignoreSalesOrderSplitter: ${ignore_sales_order_splitter}
