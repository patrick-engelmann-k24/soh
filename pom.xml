<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.kfzteile24.soh</groupId>
  <artifactId>sales-order-hub-bpmn</artifactId>
  <version>1.5.0</version>
  <name>soh-order-hub-bpmn</name>
  <description>Run the core sales order hub BPMN processes</description>

  <properties>
    <camunda.spring-boot.version>7.16.0</camunda.spring-boot.version>
    <spring-boot.version>2.6.2</spring-boot.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring-cloud-version>2.2.6.RELEASE</spring-cloud-version>
    <json-schema-java-bundle.version>1.0.43</json-schema-java-bundle.version>
    <soh-order-json.version>1.0.27</soh-order-json.version>
    <surefire-version>3.0.0-M7</surefire-version>
    <newrelic.version>7.8.0</newrelic.version>
    <mapstruct.version>1.5.2.Final</mapstruct.version>
    <lombok.version>1.18.24</lombok.version>
    <spring-wiremock-version>2.2.8.RELEASE</spring-wiremock-version>
    <camunda-bpm-assert-scenario.version>1.1.1</camunda-bpm-assert-scenario.version>
    <camunda-process-test-coverage-starter-platform8.version>1.0.3
    </camunda-process-test-coverage-starter-platform8.version>
    <springdoc-openapi-ui.version>1.6.9</springdoc-openapi-ui.version>
    <camunda-bpm-migration.version>1.0</camunda-bpm-migration.version>
    <spring-cloud-starter-sleuth.version>3.1.0</spring-cloud-starter-sleuth.version>
    <camunda-bpm-reactor-spring-starter.version>2.1.2</camunda-bpm-reactor-spring-starter.version>
    <jackson-bean-validation.version>0.6.0</jackson-bean-validation.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>github</id>
      <name>GitHub kfzteile24 Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/kfzteile24/json-schema-java-bundle</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.newrelic.agent.java</groupId>
      <artifactId>newrelic-api</artifactId>
      <version>${newrelic.version}</version>
    </dependency>

    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
      <version>${camunda.spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
      <version>${camunda.spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-aws-messaging</artifactId>
      <version>${spring-cloud-version}</version>
    </dependency>
    <dependency>
      <groupId>de.kfzteile24.json.schema</groupId>
      <artifactId>json-schema-java-bundle</artifactId>
      <version>${json-schema-java-bundle.version}</version>
    </dependency>
    <dependency>
      <groupId>de.kfzteile24.soh.order</groupId>
      <artifactId>soh-order-json</artifactId>
      <version>${soh-order-json.version}</version>
    </dependency>

    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${springdoc-openapi-ui.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.extension.migration</groupId>
      <artifactId>camunda-bpm-migration</artifactId>
      <version>${camunda-bpm-migration.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
      <version>${spring-cloud-starter-sleuth.version}</version>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.extension.reactor</groupId>
      <artifactId>camunda-bpm-reactor-spring-starter</artifactId>
      <version>${camunda-bpm-reactor-spring-starter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.unbroken-dome.jackson-bean-validation</groupId>
      <artifactId>jackson-bean-validation</artifactId>
      <version>${jackson-bean-validation.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring-boot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
      <version>${camunda.spring-boot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.assert</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>15.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>2.33.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-assert-scenario</artifactId>
      <version>${camunda-bpm-assert-scenario.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.springboot</groupId>
      <artifactId>camunda-bpm-spring-boot-starter-test</artifactId>
      <version>7.16.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.camunda.bpm.assert</groupId>
          <artifactId>camunda-bpm-assert-assertj3-11-1</artifactId>
        </exclusion>
      </exclusions>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage-spring-test</artifactId>
      <version>1.0.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>soh-bpmn</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <configuration>
          <layout>ZIP</layout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>9.0.1</version>
        <configuration>
          <baselineOnMigrate>true</baselineOnMigrate>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.3.6</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <!-- This is needed when using Lombok 1.18.16 and above -->
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>0.2.0</version>
            </path>
            <!-- Mapstruct should follow the lombok path(s) -->
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.7</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>integration</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-version}</version>
            <configuration>
              <includes>
                <include>**/*IntegrationTest</include>
                <include>**/*IntTest</include>
                <include>**/*MvcTest</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>model-test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-version}</version>
            <configuration>
              <includes>
                <include>**/*ModelTest</include>
              </includes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>unit-test</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-version}</version>
            <configuration>
              <excludes>
                <exclude>**/*IntegrationTest</exclude>
                <exclude>**/*IntTest</exclude>
                <exclude>**/*ModelTest</exclude>
                <exclude>**/*MvcTest</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>

